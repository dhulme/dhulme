{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\src\\App.svelte",
    "..\\src\\Chart.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { onMount } from \"svelte\";\n  import { logIn, initUser, initToken } from \"./api.js\";\n  import SelectPlaylist from \"./SelectPlaylist.svelte\";\n  import TrackFetcher from \"./TrackFetcher.svelte\";\n  import ChartTracks from \"./ChartTracks.svelte\";\n  import ChartArtist from \"./ChartArtist.svelte\";\n  import ChartTopArtists from \"./ChartTopArtists.svelte\";\n\n  let user;\n  let initUserPromise;\n  let playlistId;\n  let tracks = [];\n\n  onMount(async () => {\n    await initToken();\n    initUserPromise = initUser();\n    user = await initUserPromise;\n  });\n</script>\n\n<style>\n  .user {\n    color: #fff;\n  }\n\n  .credits {\n    font-size: 0.75rem;\n    color: #fff;\n  }\n\n  .credits a {\n    color: #fff;\n  }\n\n  .navbar-brand {\n    display: block;\n  }\n\n  @media (min-width: 1024px) {\n    .navbar-brand {\n      display: flex;\n    }\n\n    .credits {\n      border-left: 1px solid #fff;\n    }\n  }\n</style>\n\n<nav class=\"navbar is-info\">\n  <div class=\"navbar-brand\">\n    <div class=\"navbar-item\">Spotify Stats</div>\n    <div class=\"navbar-item\">\n      {#if user}\n        <SelectPlaylist on:playlistSelected={e => (playlistId = e.detail)} />\n      {/if}\n    </div>\n  </div>\n\n  <div class=\"navbar-end\">\n    <div class=\"navbar-item\">\n      {#await initUserPromise}\n        <p>Loading...</p>\n      {:then user}\n        {#if user}\n          <p class=\"user\">{user.displayName}</p>\n        {/if}\n      {:catch error}\n        <p>Failed to get user</p>\n      {/await}\n    </div>\n    <div class=\"navbar-item credits\">\n      <p>\n        Built using\n        <a href=\"https://svelte.dev/\">Svelte</a>\n        <br />\n        <a href=\"https://github.com/dhulme/spotify-stats\">\n          github.com/dhulme/spotify-stats\n        </a>\n      </p>\n    </div>\n  </div>\n</nav>\n\n<section class=\"section\">\n  {#if user}\n    <TrackFetcher {playlistId} on:tracksChanged={e => (tracks = e.detail)} />\n    {#if tracks.length}\n      <ChartTracks {tracks} />\n      <ChartArtist {tracks} />\n      <ChartTopArtists {tracks} />\n    {/if}\n  {/if}\n</section>\n",
    "<script>\r\n  import Chart from \"chart.js\";\r\n\r\n\texport let chart = {};\r\n\texport let title = '';\r\n\r\n  let canvas;\r\n\r\n  $: {\r\n    if (canvas) {\r\n\t\t\tnew Chart(canvas.getContext(\"2d\"), chart);\r\n\t\t}\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .graph-container {\r\n    height: 400px;\r\n    position: relative;\r\n  }\r\n\r\n  h2 {\r\n    margin-bottom: 1rem;\r\n\t}\r\n\t\r\n\t.container {\r\n\t\tmargin-bottom: 1rem;\r\n\t}\r\n\t\r\n\t.title-container {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t}\r\n</style>\r\n\r\n<div class=\"container\">\r\n\t<div class=\"title-container\">\r\n\t\t<h2>{title}</h2>\r\n\t\t<slot name=\"controls\" />\r\n\t</div>\r\n\t<div class=\"graph-container\">\r\n\t\t<canvas bind:this={canvas} />\r\n\t</div>\r\n</div>\r\n"
  ],
  "names": [],
  "mappings": "AAsBE,KAAK,cAAC,CAAC,AACL,KAAK,CAAE,IAAI,AACb,CAAC,AAED,QAAQ,cAAC,CAAC,AACR,SAAS,CAAE,OAAO,CAClB,KAAK,CAAE,IAAI,AACb,CAAC,AAED,sBAAQ,CAAC,CAAC,cAAC,CAAC,AACV,KAAK,CAAE,IAAI,AACb,CAAC,AAED,aAAa,cAAC,CAAC,AACb,OAAO,CAAE,KAAK,AAChB,CAAC,AAED,MAAM,AAAC,YAAY,MAAM,CAAC,AAAC,CAAC,AAC1B,aAAa,cAAC,CAAC,AACb,OAAO,CAAE,IAAI,AACf,CAAC,AAED,QAAQ,cAAC,CAAC,AACR,WAAW,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,AAC7B,CAAC,AACH,CAAC;AC/BD,gBAAgB,eAAC,CAAC,AAChB,MAAM,CAAE,KAAK,CACb,QAAQ,CAAE,QAAQ,AACpB,CAAC,AAED,EAAE,eAAC,CAAC,AACF,aAAa,CAAE,IAAI,AACtB,CAAC,AAED,UAAU,eAAC,CAAC,AACX,aAAa,CAAE,IAAI,AACpB,CAAC,AAED,gBAAgB,eAAC,CAAC,AACjB,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,aAAa,AAC/B,CAAC"
}